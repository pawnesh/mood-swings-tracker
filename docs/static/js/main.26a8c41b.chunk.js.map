{"version":3,"sources":["EMOTIONS.js","db.js","LogEmotion.js","Dashboard.js","Switcher.js","App.js","index.js"],"names":["EMOTIONS","Cheerful","value","icon","action","Happy","Calm","Good","Neutral","Sad","Annoyed","Frustrated","Angry","EMOTIONS_REVERSE","EMOTIONS_SCORES","key","name","push","dateFormat","require","db","this","saveEmotion","now","Date","item","localStorage","getItem","setItem","e","code","freeUpSpace","getAllEmotion","emotions","split","getEmotion","keys","sort","removeItem","clear","LogEmotion","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected_element","animate_class","bind","assertThisInitialized","event","preventDefault","el","target","tagName","parentElement","setState","getAttribute","className","elements","emotion_name","react_default","a","createElement","data-key","data-action","onClick","src","process","alt","selectedElememnt","React","Component","Dashboard","emotionsLog","updateState","restart","em","forEach","element","averageScore","nearestEmotionScore","includes","reduce","prev","curr","Math","abs","emotion","list","index","temp","average","parseInt","length","window","confirm","reportElement","self","getBlock","Switcher","activeTab","tabClick","items","tabElement","supers","animateClass","tabs","tab","classname","data-index","App","src_Switcher","src_LogEmotion","src_Dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.26a8c41b.chunk.js","sourcesContent":["var EMOTIONS = {\n    \"Cheerful\": {\n        \"value\": 4,\n        \"icon\" : \"1f601\",\n        \"action\": \"rubberBand\"\n    },\n    \"Happy\" : {\n        \"value\": 3,\n        \"icon\" : \"1f606\",\n        \"action\": \"tada\"\n    },\n    \"Calm\" : {\n        \"value\": 2,\n        \"icon\" : \"1f607\",\n        \"action\": \"rotateInUpLeft\"\n    },\n    \"Good\" : {\n        \"value\": 1,\n        \"icon\" : \"1f600\",\n        \"action\": \"slideInRight\"\n    },\n    \"Neutral\" : {\n        \"value\": 0,\n        \"icon\" : \"1f610\",\n        \"action\": \"slideInRight\"\n    },\n    \"Sad\" : {\n        \"value\": -1,\n        \"icon\" : \"1f622\",\n        \"action\": \"fadeInLeft\"\n    },\n    \"Annoyed\" : {\n        \"value\": -2,\n        \"icon\" : \"1f612\",\n        \"action\": \"wobble\"\n    },\n    \"Frustrated\" : {\n        \"value\": -3,\n        \"icon\" : \"1f624\",\n        \"action\": \"pulse\"\n    },\n    \"Angry\" : {\n        \"value\": -4,\n        \"icon\" : \"1f621\",\n        \"action\": \"shake\"\n    }\n};\n\nvar EMOTIONS_REVERSE = [];\nvar EMOTIONS_SCORES = [];\n\nfor(var key in EMOTIONS){\n    EMOTIONS_REVERSE[EMOTIONS[key].value] = EMOTIONS[key];\n    EMOTIONS_REVERSE[EMOTIONS[key].value].name = key;\n    EMOTIONS_SCORES.push(EMOTIONS[key].value);\n}\n\nexport default EMOTIONS;\nexport {\n    EMOTIONS_REVERSE,\n    EMOTIONS_SCORES,\n    EMOTIONS\n}","var dateFormat = require('dateformat');\n\nvar db = function(){\n    this.saveEmotion = function(value){\n        var now = new Date();\n        var key = dateFormat(now, \"yyyy-m-d\");\n        var item = localStorage.getItem(key);\n        if(item == null){\n            item = '';\n        }\n        item += value + ',';\n        try{\n            localStorage.setItem(key, item);\n        }catch(e){\n            if (e.code === 22) {\n                this.freeUpSpace();\n                this.saveEmotion(value);\n            }\n        }\n    }\n\n    this.getAllEmotion = function(){\n        var emotions = [];\n        for (var key in localStorage){\n            if(localStorage.getItem(key)){\n                emotions[key] = localStorage.getItem(key).split(',');\n            }\n        }\n        return emotions;\n    }\n\n    this.getEmotion = function(key){\n        var value = localStorage.getItem(key);\n        if(value == null){\n            value = \"\";\n        }\n        value = value.split(',');\n        return value;\n    }\n\n    // remove the oldest entery\n    this.freeUpSpace = function(){\n        var emotions = this.getAllEmotion();\n        var keys = [];\n        for(var key in emotions){\n            keys.push(key);\n        }\n        keys = keys.sort();\n        if(keys[0]){\n            localStorage.removeItem(keys[0]);\n        }\n    }\n\n    this.clear = function(){\n        var emotions = this.getAllEmotion();\n        for(var key in emotions){\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nexport default db;","import React from 'react';\nimport EMOTIONS from './EMOTIONS';\nimport db  from './db';\n\nclass LogEmotion extends React.Component{\n    constructor(props) {\n        super(props);\n        this.db = new db();\n        this.state = {selected_element: null, animate_class:\"\"};\n        this.saveEmotion = this.saveEmotion.bind(this);\n    }\n\n    saveEmotion(event){\n        event.preventDefault();\n        var el = event.target;\n        if(el.tagName === 'IMG'){\n            el = el.parentElement.parentElement;\n        }\n        if(el.tagName === 'SPAN'){\n            el = el.parentElement;\n        }\n        this.db.saveEmotion(el.value);\n        this.setState({\n            selected_element: el.getAttribute('data-key'),\n            animate_class: 'animated  '+el.getAttribute('data-action')\n        });\n        el.className = 'animated heartBeat';\n    }\n\n    render(){\n        var elements = [];\n\n        for (var emotion_name in EMOTIONS) {\n            elements.push(<li data-key={emotion_name} key={emotion_name} value={EMOTIONS[emotion_name].value} data-action={EMOTIONS[emotion_name].action} onClick={this.saveEmotion}><span><img src={process.env.PUBLIC_URL+'/images/'+EMOTIONS[emotion_name].icon+'.svg'} alt={emotion_name}/></span>{emotion_name}</li>);\n        }\n\n        var selectedElememnt = null;\n        if(this.state.selected_element != null){\n            selectedElememnt =  <div className=\"selected-element\">\n            <h3>Entery saved!</h3>\n            <span className={this.state.animate_class}><img src={process.env.PUBLIC_URL+'/images/'+EMOTIONS[this.state.selected_element].icon+'.svg'} alt={emotion_name}/></span>{this.state.selected_element}\n            </div>;\n            elements = null;\n        }\n        return (<div className=\"emotions-list\">\n            {selectedElememnt}\n            <ul>\n            {elements}\n            </ul>\n            <div className=\"clear\"></div>\n        </div>);\n    }\n}\n\nexport default LogEmotion;","import React from 'react';\nimport { EMOTIONS_REVERSE,EMOTIONS_SCORES} from './EMOTIONS';\nimport db from './db';\nimport './dashobard.css';\n\nvar dateFormat = require('dateformat');\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { emotionsLog: null };\n        this.db = new db();\n        this.updateState = this.updateState.bind(this);\n        this.restart = this.restart.bind(this);\n    }\n\n    componentDidMount() {\n        var emotions = this.db.getAllEmotion();\n        var emotionsLog = [];\n        for(var key in emotions){\n            var em = [];\n            this.db.getEmotion(key).forEach(element => {\n                if(EMOTIONS_REVERSE[element])\n                    em.push(EMOTIONS_REVERSE[element]);\n            });\n            emotionsLog.push(em);\n        }\n\n        this.updateState(emotionsLog);\n    }\n\n    updateState(emotionsLog) {\n        var emotionsLog = emotionsLog? emotionsLog : this.state.emotionsLog;\n        this.setState({\n            emotionsLog: emotionsLog\n        });\n    }\n\n    getAverageTag(averageScore){\n        var nearestEmotionScore = averageScore;\n        if(!EMOTIONS_SCORES.includes(nearestEmotionScore)){\n            nearestEmotionScore = EMOTIONS_SCORES.reduce(function(prev, curr) {\n                return (Math.abs(curr - averageScore) < Math.abs(prev - averageScore) ? curr : prev);\n            });              \n        }\n        var emotion = EMOTIONS_REVERSE[nearestEmotionScore];\n        return <div className=\"average\">\n            <img src={process.env.PUBLIC_URL+'/images/'+emotion.icon+'.svg'} alt={emotion.name}/><br/>\n            {emotion.name}\n        </div>;\n    }\n\n    getBlock(list,index){\n        var temp = [];\n        var average = 0;\n        list.forEach(function (element,index) {\n            temp.push(<img src={process.env.PUBLIC_URL+'/images/'+element.icon+'.svg'} alt={element.name} key={element.name+index}/>);\n            average += parseInt(element.value);\n        });\n        var average = average/list.length;\n\n        var el = <div className=\"block\" key={'block'+index}>\n            <div className=\"content\">\n                {temp}\n            </div>\n        </div>;\n        return el;\n    }\n\n    restart(){\n        if(window.confirm('This will delete all the logs?')){\n            this.db.clear();\n        }\n    }\n\n    render() {\n        var reportElement = [];\n\n        if (this.state.emotionsLog && this.state.emotionsLog.length > 0) {\n            var self = this;\n            this.state.emotionsLog.forEach(function(elements,index){\n                var el = self.getBlock(elements,index);\n                reportElement.push(el);\n            });\n        }\n\n        if(reportElement.length == 0){\n            reportElement = <div className=\"center\"><img src={process.env.PUBLIC_URL+'/images/1f34a.svg'} alt=\"empty log book\"/><br/>Empty Logs</div>;\n        }\n\n        // today elemnt\n        return <div className=\"dashboard\">\n            {reportElement}\n            <button className=\"restart\" onClick={this.restart}>Start Fresh</button>\n        </div>\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport './switcher.css';\n\nclass Switcher extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {activeTab: 0};\n        this.tabClick = this.tabClick.bind(this);\n    }\n\n    tabClick(event){\n        event.preventDefault();\n        var el = event.target;\n        var index = el.getAttribute('data-index');\n        this.setState({\n            activeTab: index\n        });\n    }\n\n    render(){\n        var items = [];\n        var tabElement = null;\n        var supers = this;\n        var animateClass = \"animated slideInLeft\";\n\n        this.props.tabs.forEach(function(tab,index){\n            var classname = \"\";\n            if(supers.state.activeTab == index){\n                classname = \"active\";\n                tabElement = tab.element;\n                if(animateClass === \"animated slideInLeft\"){\n                    animateClass = \"animated slideInRight\";\n                }\n            }\n\n            items.push(<li key={tab.name} data-index={index} className={classname} onClick={supers.tabClick}>{tab.name}</li>);\n        });\n\n        return <div className=\"switcher\">\n            <header>\n                <ul className=\"items\">\n                {items}\n                </ul>\n            </header>\n            <div>\n            {tabElement}\n            </div>\n        </div>\n    }\n}\n\nexport default Switcher;","import React from 'react';\nimport './animate.css';\nimport './App.css';\nimport LogEmotion from './LogEmotion';\nimport Dashbord from './Dashboard';\nimport Switcher from './Switcher';\n\nfunction App() {\n  return (\n      <Switcher tabs={[\n        {\n          name: \"Home\",\n          element: <LogEmotion/>\n        },\n        {\n          name: \"Logs\",\n          element: <Dashbord/> \n        }\n      ]\n      } />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}