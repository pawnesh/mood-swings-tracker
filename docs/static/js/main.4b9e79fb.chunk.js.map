{"version":3,"sources":["EMOTIONS.js","db.js","LogEmotion.js","Dashboard.js","Switcher.js","App.js","serviceWorker.js","index.js"],"names":["EMOTIONS","Cheerful","value","icon","action","Happy","Calm","Good","Neutral","Sad","Annoyed","Frustrated","Angry","EMOTIONS_REVERSE","EMOTIONS_SCORES","key","name","push","dateFormat","require","db","this","saveEmotion","now","Date","item","localStorage","getItem","setItem","e","code","freeUpSpace","getAllEmotion","emotions","split","getEmotion","keys","sort","removeItem","clear","LogEmotion","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected_element","animate_class","bind","assertThisInitialized","event","preventDefault","el","target","tagName","parentElement","setState","getAttribute","className","elements","emotion_name","react_default","a","createElement","data-key","data-action","onClick","src","process","alt","selectedElememnt","React","Component","Dashboard","today","week","month","updateState","restart","forEach","element","i","setDate","getDate","arr","sum","length","parseInt","nearestEmotionScore","reduce","prev","curr","Math","abs","console","log","argToday","argWeek","argMonth","averageScore","includes","emotion","list","title","temp","average","index","getAverageTag","window","confirm","reportElement","getBlock","class","Switcher","activeTab","tabClick","items","tabElement","supers","animateClass","tabs","tab","classname","data-index","App","src_Switcher","src_LogEmotion","src_Dashboard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b9e79fb.chunk.js","sourcesContent":["var EMOTIONS = {\n    \"Cheerful\": {\n        \"value\": 4,\n        \"icon\" : \"1f601\",\n        \"action\": \"rubberBand\"\n    },\n    \"Happy\" : {\n        \"value\": 3,\n        \"icon\" : \"1f606\",\n        \"action\": \"tada\"\n    },\n    \"Calm\" : {\n        \"value\": 2,\n        \"icon\" : \"1f607\",\n        \"action\": \"rotateInUpLeft\"\n    },\n    \"Good\" : {\n        \"value\": 1,\n        \"icon\" : \"1f600\",\n        \"action\": \"slideInRight\"\n    },\n    \"Neutral\" : {\n        \"value\": 0,\n        \"icon\" : \"1f610\",\n        \"action\": \"slideInRight\"\n    },\n    \"Sad\" : {\n        \"value\": -1,\n        \"icon\" : \"1f622\",\n        \"action\": \"fadeInLeft\"\n    },\n    \"Annoyed\" : {\n        \"value\": -2,\n        \"icon\" : \"1f612\",\n        \"action\": \"wobble\"\n    },\n    \"Frustrated\" : {\n        \"value\": -3,\n        \"icon\" : \"1f624\",\n        \"action\": \"pulse\"\n    },\n    \"Angry\" : {\n        \"value\": -4,\n        \"icon\" : \"1f621\",\n        \"action\": \"shake\"\n    }\n};\n\nvar EMOTIONS_REVERSE = [];\nvar EMOTIONS_SCORES = [];\n\nfor(var key in EMOTIONS){\n    EMOTIONS_REVERSE[EMOTIONS[key].value] = EMOTIONS[key];\n    EMOTIONS_REVERSE[EMOTIONS[key].value].name = key;\n    EMOTIONS_SCORES.push(EMOTIONS[key].value);\n}\n\nexport default EMOTIONS;\nexport {\n    EMOTIONS_REVERSE,\n    EMOTIONS_SCORES,\n    EMOTIONS\n}","var dateFormat = require('dateformat');\n\nvar db = function(){\n    this.saveEmotion = function(value){\n        var now = new Date();\n        var key = dateFormat(now, \"yyyy-m-d\");\n        var item = localStorage.getItem(key);\n        if(item == null){\n            item = '';\n        }\n        item += value + ',';\n        try{\n            localStorage.setItem(key, item);\n        }catch(e){\n            if (e.code === 22) {\n                this.freeUpSpace();\n                this.saveEmotion(value);\n            }\n        }\n    }\n\n    this.getAllEmotion = function(){\n        var emotions = [];\n        for (var key in localStorage){\n            if(localStorage.getItem(key)){\n                emotions[key] = localStorage.getItem(key).split(',');\n            }\n        }\n        return emotions;\n    }\n\n    this.getEmotion = function(key){\n        var value = localStorage.getItem(key);\n        if(value == null){\n            value = \"\";\n        }\n        value = value.split(',');\n        return value;\n    }\n\n    // remove the oldest entery\n    this.freeUpSpace = function(){\n        var emotions = this.getAllEmotion();\n        var keys = [];\n        for(var key in emotions){\n            keys.push(key);\n        }\n        keys = keys.sort();\n        if(keys[0]){\n            localStorage.removeItem(keys[0]);\n        }\n    }\n\n    this.clear = function(){\n        var emotions = this.getAllEmotion();\n        for(var key in emotions){\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nexport default db;","import React from 'react';\nimport EMOTIONS from './EMOTIONS';\nimport db  from './db';\n\nclass LogEmotion extends React.Component{\n    constructor(props) {\n        super(props);\n        this.db = new db();\n        this.state = {selected_element: null, animate_class:\"\"};\n        this.saveEmotion = this.saveEmotion.bind(this);\n    }\n\n    saveEmotion(event){\n        event.preventDefault();\n        var el = event.target;\n        if(el.tagName === 'IMG'){\n            el = el.parentElement.parentElement;\n        }\n        if(el.tagName === 'SPAN'){\n            el = el.parentElement;\n        }\n        this.db.saveEmotion(el.value);\n        this.setState({\n            selected_element: el.getAttribute('data-key'),\n            animate_class: 'animated  '+el.getAttribute('data-action')\n        });\n        el.className = 'animated heartBeat';\n    }\n\n    render(){\n        var elements = [];\n\n        for (var emotion_name in EMOTIONS) {\n            elements.push(<li data-key={emotion_name} key={emotion_name} value={EMOTIONS[emotion_name].value} data-action={EMOTIONS[emotion_name].action} onClick={this.saveEmotion}><span><img src={process.env.PUBLIC_URL+'/images/'+EMOTIONS[emotion_name].icon+'.svg'} alt={emotion_name}/></span>{emotion_name}</li>);\n        }\n\n        var selectedElememnt = null;\n        if(this.state.selected_element != null){\n            selectedElememnt =  <div className=\"selected-element\">\n            <h3>Entery saved!</h3>\n            <span className={this.state.animate_class}><img src={process.env.PUBLIC_URL+'/images/'+EMOTIONS[this.state.selected_element].icon+'.svg'} alt={emotion_name}/></span>{this.state.selected_element}\n            </div>;\n            elements = null;\n        }\n        return (<div className=\"emotions-list\">\n            {selectedElememnt}\n            <ul>\n            {elements}\n            </ul>\n            <div className=\"clear\"></div>\n        </div>);\n    }\n}\n\nexport default LogEmotion;","import React from 'react';\nimport { EMOTIONS_REVERSE,EMOTIONS_SCORES} from './EMOTIONS';\nimport db from './db';\nimport './dashobard.css';\n\nvar dateFormat = require('dateformat');\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { today: null, week: null, month: null };\n        this.db = new db();\n        this.updateState = this.updateState.bind(this);\n        this.restart = this.restart.bind(this);\n    }\n\n    componentDidMount() {\n        var emotions = this.db.getAllEmotion();\n        var keys = [];\n        for (var key in emotions) {\n            keys.push(key);\n        }\n        var today = [];\n        var now = new Date();\n        // today\n        var key = dateFormat(now, \"yyyy-m-d\");\n        this.db.getEmotion(key).forEach(element => {\n            if(EMOTIONS_REVERSE[element])\n                today.push(EMOTIONS_REVERSE[element]);\n        });\n\n        // week\n        var week = [];\n        for(var i=0; i<7;i++){\n            now = new Date();\n            now.setDate(now.getDate() - i);\n            var key = dateFormat(now,\"yyyy-m-d\");\n            var arr = this.db.getEmotion(key);\n            var sum = 0;\n            if(arr == null){\n                continue;\n            }\n            if(arr.length == 0){\n                continue;\n            }\n            if(arr[0] == ''){\n                continue;\n            }\n            arr.forEach((element)=> {\n                if(element){\n                    sum += parseInt(element);\n                }\n            });\n            sum = sum/arr.length;\n            var nearestEmotionScore = EMOTIONS_SCORES.reduce(function(prev, curr) {\n                return (Math.abs(curr - sum) < Math.abs(prev - sum) ? curr : prev);\n            });\n            week.push(EMOTIONS_REVERSE[nearestEmotionScore]);\n        }\n        console.log(week);\n\n        // month\n        var month = [];\n        for(var i=0; i<30;i++){\n            now = new Date();\n            now.setDate(now.getDate() - i);\n            var key = dateFormat(now,\"yyyy-m-d\");\n            var arr = this.db.getEmotion(key);\n            var sum = 0;\n            if(arr == null){\n                continue;\n            }\n            if(arr.length == 0){\n                continue;\n            }\n            if(arr[0] == ''){\n                continue;\n            }\n            \n            arr.forEach((element)=> {\n                if(element){\n                    sum += parseInt(element);\n                }\n            });\n            sum = sum/arr.length;\n            var nearestEmotionScore = EMOTIONS_SCORES.reduce(function(prev, curr) {\n                return (Math.abs(curr - sum) < Math.abs(prev - sum) ? curr : prev);\n            });\n            month.push(EMOTIONS_REVERSE[nearestEmotionScore]);\n        }\n\n        this.updateState(today,week,month);\n    }\n\n    updateState(argToday, argWeek, argMonth) {\n        var today = argToday? argToday : this.state.today;\n        var week = argWeek ? argWeek : this.state.week;\n        var month = argMonth ? argMonth : this.state.month;\n        this.setState({\n            today: today,\n            week: week,\n            month: month\n        });\n    }\n\n    getAverageTag(averageScore){\n        var nearestEmotionScore = averageScore;\n        if(!EMOTIONS_SCORES.includes(nearestEmotionScore)){\n            nearestEmotionScore = EMOTIONS_SCORES.reduce(function(prev, curr) {\n                return (Math.abs(curr - averageScore) < Math.abs(prev - averageScore) ? curr : prev);\n            });              \n        }\n        var emotion = EMOTIONS_REVERSE[nearestEmotionScore];\n        return <div className=\"average\">\n            <img src={process.env.PUBLIC_URL+'/images/'+emotion.icon+'.svg'} alt={emotion.name}/><br/>\n            {emotion.name}\n        </div>;\n    }\n\n    getBlock(list,title){\n        var temp = [];\n        var average = 0;\n        list.forEach(function (element,index) {\n            temp.push(<img src={process.env.PUBLIC_URL+'/images/'+element.icon+'.svg'} alt={element.name} key={element.name+index+title}/>);\n            average += parseInt(element.value);\n        });\n        var average = average/list.length;\n\n        var el = <div className=\"block\" key={'block'+title}>\n            <header className=\"header\"><h3>{title}</h3></header>\n            <div className=\"content\">\n                {temp}\n            </div>\n            <footer>\n                {this.getAverageTag(average)}\n            </footer>\n        </div>;\n        return el;\n    }\n\n    restart(){\n        if(window.confirm('This will delete all the logs?')){\n            this.db.clear();\n        }\n    }\n\n    render() {\n        var reportElement = [];\n\n        if (this.state.today && this.state.today.length > 0) {\n            var el = this.getBlock(this.state.today,'Today');\n            reportElement.push(el);\n        }\n\n        if (this.state.week && this.state.week.length > 0) {\n            var el = this.getBlock(this.state.week,'Week');\n            reportElement.push(el);\n        }\n\n        if (this.state.month && this.state.month.length > 0) {\n            var el = this.getBlock(this.state.month,'Month');\n            reportElement.push(el);\n        }\n\n        if(reportElement.length == 0){\n            reportElement = <div class=\"center\"><img src={process.env.PUBLIC_URL+'/images/1f34a.svg'} alt=\"empty log book\"/><br/>Empty Logs</div>;\n        }\n\n        // today elemnt\n        return <div className=\"dashboard\">\n            {reportElement}\n            <button className=\"restart\" onClick={this.restart}>Start Fresh</button>\n        </div>\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport './switcher.css';\n\nclass Switcher extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {activeTab: 0};\n        this.tabClick = this.tabClick.bind(this);\n    }\n\n    tabClick(event){\n        event.preventDefault();\n        var el = event.target;\n        var index = el.getAttribute('data-index');\n        this.setState({\n            activeTab: index\n        });\n    }\n\n    render(){\n        var items = [];\n        var tabElement = null;\n        var supers = this;\n        var animateClass = \"animated slideInLeft\";\n\n        this.props.tabs.forEach(function(tab,index){\n            var classname = \"\";\n            if(supers.state.activeTab == index){\n                classname = \"active\";\n                tabElement = tab.element;\n                if(animateClass === \"animated slideInLeft\"){\n                    animateClass = \"animated slideInRight\";\n                }\n            }\n\n            items.push(<li key={tab.name} data-index={index} className={classname} onClick={supers.tabClick}>{tab.name}</li>);\n        });\n\n        return <div className=\"switcher\">\n            <header>\n                <ul className=\"items\">\n                {items}\n                </ul>\n            </header>\n            <div>\n            {tabElement}\n            </div>\n        </div>\n    }\n}\n\nexport default Switcher;","import React from 'react';\nimport './animate.css';\nimport './App.css';\nimport LogEmotion from './LogEmotion';\nimport Dashbord from './Dashboard';\nimport Switcher from './Switcher';\n\nfunction App() {\n  return (\n      <Switcher tabs={[\n        {\n          name: \"Home\",\n          element: <LogEmotion/>\n        },\n        {\n          name: \"Logs\",\n          element: <Dashbord/> \n        }\n      ]\n      } />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}